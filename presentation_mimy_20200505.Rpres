<style>
.small-code pre code {
  font-size: 1em;
}
</style>

How to measure selection on pathogen evasion
========================================================
author: Richel J.C. Bilderbeek
date:
autosize: true

Libraries
========================================================

The Bianchi, Bilderbeek, Bogaart Question:

```{r}
library(bbbq)
```

***

Testing:

```{r}
library(testthat)
```

Research question
========================================================

For a pathogen, can we find selection on detection?

```{r, echo=FALSE}
bbbq::plot_markov_chain_tikz(
  transition_matrix = matrix(c("no", "no", "yes", "yes"), nrow = 2),
)
```

Selection in pathogens
========================================================

Parts of pathogens are strongly selected upon [1]

***

![](F4_400.png)

Host and pathogen arms race?
========================================================

No signal of selection detected from a host's immune system [2]

***

![](han2018_1b.png)

Sure!
========================================================

 * Vital loci are rare within one pathogen
 * Vital loci differ between pathogens
 * Selection on detecting rare$^2$ loci is unlikely

âˆ´ Detection of vital loci is unlikely

Transmembrane helices
========================================================

 * TMHs are general structures!
 * Can we detect selection on them?

***

![](tmh_50.png)

Detect
========================================================

 * Take a strong dataset
 * Count the state transitions

Transition|Count|Expected
----------|-----|--------
D -> D    |350  |?
D -> U    |200  |?
U -> D    |100  |?
U -> U    |350  |?

***

![](covid_75.png)

Predict
========================================================

Given a (in this case, cherry-picked) focal TMH AA sequence ...

```{r}
f <- "IIPMVPVTCLFYIMMAFIFI"
```

***

... we can predict if it is detected

```{r}
cat(is_detected(f))
```

Predict
========================================================

And we can predict the chance a mutant will be detected:

```{r cache=TRUE}
calc_p_det_tmh_mut(f)
```

We can do that for all TMHs!

Conclusion
========================================================

Transition|Count|Expected
----------|-----|--------
D -> D    |350  |400
D -> U    |200  |100
U -> D    |100  | 50
U -> U    |350  |450

Calculate the probability that the observations are
caused by chance. If unlikely, then selection!

Questions
========================================================

?

Supplementary materials
========================================================

Here I show the calculation in more detail.

Calculation
========================================================

The chance, $p$, that a mutant is detected, is:

$$
p = \frac{\sum{r}|d}{\sum{r}}
$$

 * $r$: transition rate
 * $d$: is detected

***

Mutant |$r$|$d$
-------|---|---
A      |1  |No
B      |2  |Yes
C      |3  |No

$p = \frac{2}{1 + 2 + 3} = \frac{1}{3}$

Statistics (a Poisson binomial distribution)
========================================================

If we observe:

```{r echo=FALSE}
df_obs <- data.frame(
  p = c(0.1, 0.2, 0.3, 1.0),
  success = runif(n = 4) < 0.5
)
knitr::kable(df_obs)
```

Accept if $q < 0.05$.

***

Chance $q$ to have more than $n$ successes:

```{r echo=FALSE}
n <- seq(0, nrow(df_obs))
df_exp <- data.frame(
  n = n,
  q = poisbinom::ppoisbinom(n, pp = df_obs$p, lower_tail = FALSE)
)
knitr::kable(df_exp)
```

Stats
========================================================

```{r}
ps <- seq(0.1, 1.0, by = 0.1)
poisbinom::ppoisbinom(1, pp = ps, lower_tail = TRUE, log_p = FALSE)
```
Predict
========================================================

We can predict all its neighbors:

```{r}
ns <- get_adjacent_sequences(f)
expect_equal(nchar(f) * 19, length(ns))
cat(sample(ns, size = 4))
```

Predict
========================================================

For each neighbor ...

```{r}
n <- sample(ns, size = 1)
cat(n)
```

***

... we can predict if it is TMH ...

```{r}
cat(is_tmh(n))
```

Predict
========================================================

... if it is detected ...

```{r}
cat(is_detected(n))
```

***

... and how (relatively) likely the mutation was:

```{r}
cat(
get_transition_rate(
  f, n))
```


Predict
========================================================

For one mutation, we know the AAs transition rates:

```{r}
get_transition_rate("A", "W") # Uncommon
get_transition_rate("A", "T") # Common
```

Predict
========================================================



Detect
========================================================

 * Calculate the expected number of mutations and state transitions by chance
 * Compare if observations were likely due to chance

# Chance for state change
# * Chance for AA start -> AA end mutation
# * Chance for AA start state -> AA end state, given it remains a TMH

# Possible results
# * First to detect selection by a host
# * There is no selection by a host on TMHs
#   (maybe on beta turns?)

# Ref

References
========================================================

 * [1] Velazquez-Salinas, Lauro, et al. "Positive selection of ORF3a and ORF8 genes drives the evolution of SARS-CoV-2 during the 2020 COVID-19 pandemic." bioRxiv (2020).
 * [2] Han, Alvin X., Sebastian Maurer-Stroh, and Colin A. Russell. "Individual immune selection pressure has limited impact on seasonal influenza virus evolution." Nature ecology & evolution 3.2 (2019): 302-311.

Image attribution
========================================================

 * [1] https://www.studyblue.com/notes/note/n/biological-membranes-and-transport/deck/1550695
 * [2] https://nextstrain.org/ncov/global?l=radial
